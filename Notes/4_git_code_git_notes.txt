# Основные команды для работы с репозиторием
- `git init`                                            # Инициализация репозитория
- `git status`                                          # Проверка состояния репозитория
- `git log`                                             # Просмотр истории всех коммитов
- `git branch`                                          # Просмотр локальных веток
- `git branch -a`                                       # Просмотр всех веток (локальные и удалённые)
- `git remote -v`                                       # Просмотр удалённых репозиториев
- `git push origin имя-ветки`                           # Отправка изменений в удалённый репозиторий на ветку имя-ветки         // нужно изучить актуальность команды      
- `git pull origin имя-ветки`                           # Получение изменений из удалённого репозитория на ветку имя-ветки      // нужно изучить актуальность команды      

# Команды для работы с ветками
- `git checkout -b feature-branch`                      # Создание и переход на новую ветку
- `git checkout main`                                   # Переключение на основную ветку
- `git switch main`                                     # Переключение на основную ветку (альтернатива git checkout)
- `git branch -d имя-ветки`                             # Удаление локальной ветки
- `git branch -D имя-ветки`                             # Принудительное удаление локальной ветки
- `git branch -m новое-имя-ветки`                       # Переименование текущей ветки
- `git merge имя-ветки`                                 # Слияние ветки имя-ветки в текущую ветку
- `git rebase имя-ветки`                                # Переписать историю, добавив изменения из ветки имя-ветки              // нужно изучить актуальность команды 

# Работа с коммитами
- `git add .`                                           # Добавление всех изменений
- `git commit -m "Сообщение к коммиту"`                 # Создание коммита
- `git commit --allow-empty -m "Пустой коммит"`         # Создание пустого коммита без изменений                                 // нужно изучить актуальность команды, в чем смысл 
- `git reset --soft HEAD~1`                             # Отмена последнего коммита, но оставление изменений в рабочем каталоге
- `git reset --hard HEAD~1`                             # Отмена последнего коммита и удаление всех изменений
- `git reset путь_к_файлу`                              # Удалить файл из индекса, но оставить в рабочем каталоге

# Работа с файлами
- `git rm путь_к_файлу`                                 # Удалить файл из индекса и рабочего каталога
- `git mv старое_имя новое_имя`                         # Переименовать файл или каталог
- `git checkout -- путь_к_файлу`                        # Отменить изменения в указанном файле
- `git checkout -- .`                                   # Отменить все незакоммиченные изменения в текущем каталоге

# Теги
- `git tag имя-тага`                                    # Создание тега с именем имя-тага для текущего коммита
- `git tag имя-тага хеш_коммита`                        # Создание тега с именем имя-тага для конкретного коммита
- `git tag -d имя-тага`                                 # Удалить тег с именем имя-тага
- `git push origin :refs/tags/имя-тага`                 # Удалить тег с удалённого репозитория

# Удалённые репозитории
- `git remote add origin <url-репозитория>`             # Добавить удалённый репозиторий с URL
- `git remote remove origin`                            # Удалить удалённый репозиторий

# Часто  ююзаю 
- `git checkout main`                                   # Переключение на ветку
- `git add .`                                           # Добавление всех изменений
- `git commit -m "Сообщение к коммиту"`                 # Создание коммита
- `git push origin main`                                # Отправка изменений в основную ветку удалённого репозитория
- `git pull origin main`                                # Получение изменений из основной ветки удалённого репозитория
 